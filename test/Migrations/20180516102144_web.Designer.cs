// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using MySql.Data.EntityFrameworkCore.Storage.Internal;
using System;
using test.Models;

namespace test.Migrations
{
    [DbContext(typeof(GeneralContext))]
    [Migration("20180516102144_web")]
    partial class web
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("test.Models.Song", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Album");

                    b.Property<string>("Author");

                    b.Property<string>("Genre");

                    b.Property<string>("Meta");

                    b.Property<string>("Name");

                    b.Property<string>("Subtitles");

                    b.Property<string>("URL");

                    b.HasKey("ID");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("test.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("test.Models.UserPlaylist", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("SongID");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("SongID");

                    b.HasIndex("UserID");

                    b.ToTable("UserPlaylist");
                });

            modelBuilder.Entity("test.Models.UserPlaylist", b =>
                {
                    b.HasOne("test.Models.Song", "Song")
                        .WithMany()
                        .HasForeignKey("SongID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("test.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
